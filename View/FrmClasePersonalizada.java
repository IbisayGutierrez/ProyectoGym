/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import DataBase.DataBase;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
/**
 *
 * @author andre
 */
public class FrmClasePersonalizada extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmClasePersonalizada
     */
    public FrmClasePersonalizada() {
        initComponents();
    }
    
    private ArrayList<String[]> datos = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblCustomers = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        txtTipo = new javax.swing.JComboBox<>();
        txtHorario = new javax.swing.JComboBox<>();
        txtEntrenador = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        TbClasePersonalizada = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnID = new javax.swing.JLabel();
        btnTipo = new javax.swing.JLabel();
        btnHorario = new javax.swing.JLabel();
        btnEntrenador = new javax.swing.JLabel();

        tblCustomers.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tblCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Fecha de Nacimiento", "Telefono", "Tipo de membresia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCustomers);

        setTitle("Clase Personalidad");
        setName("Clase Personalizada"); // NOI18N

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtTipo.setEditable(true);
        txtTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Zumba", "Yoga", "Pilates ", "Cardio", " " }));
        txtTipo.setToolTipText("");

        txtHorario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ma√±ana", "Tarde", "Noche", " " }));

        txtEntrenador.setEditable(true);
        txtEntrenador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pedro", "Juan", "Jefferson", "Ibisay" }));

        TbClasePersonalizada.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TbClasePersonalizada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Entrenador", "Horario", "Tipo de Clase"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TbClasePersonalizada);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnAgregar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar ");
        btnGuardar.setToolTipText("");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(btnAgregar)
                .addGap(35, 35, 35)
                .addComponent(btnEliminar)
                .addGap(31, 31, 31)
                .addComponent(btnActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar)
                    .addComponent(btnGuardar))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnID.setText("ID");
        btnID.setBorder(new javax.swing.border.MatteBorder(null));

        btnTipo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTipo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTipo.setText("TipoClase");
        btnTipo.setBorder(new javax.swing.border.MatteBorder(null));

        btnHorario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHorario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnHorario.setText("Horario");
        btnHorario.setBorder(new javax.swing.border.MatteBorder(null));

        btnEntrenador.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEntrenador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEntrenador.setText("Entrenador");
        btnEntrenador.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addComponent(btnHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
         String id = txtID.getText().trim();
    String entrenador = (String) txtEntrenador.getSelectedItem();
    String horario = (String) txtHorario.getSelectedItem();
    String tipo = (String) txtTipo.getSelectedItem();

    // Validar que todos los campos tengan datos.
    if (id.isEmpty() || entrenador == null || horario == null || tipo == null) {
        JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Crear el registro.
    String[] registro = {id, entrenador, horario, tipo};
    datos.add(registro);  // Despu√©s de agregar el registro
    DefaultTableModel model = (DefaultTableModel) TbClasePersonalizada.getModel();
    model.addRow(registro); // Para agregar la fila de los datos


    // Mostrar un mensaje de √©xito.
    JOptionPane.showMessageDialog(this, "Registro agregado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);

    // Limpiar los campos despu√©s de agregar.
    txtID.setText("");
    txtEntrenador.setSelectedIndex(0);
    txtHorario.setSelectedIndex(0);
    txtTipo.setSelectedIndex(0);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
   // Obtener el ID ingresado.
    String id = txtID.getText().trim();

    // Validar que se haya ingresado un ID.
    if (id.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingresa un ID para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Buscar y eliminar el registro en la lista.
    boolean encontrado = false;
    for (int i = 0; i < datos.size(); i++) {
        if (datos.get(i)[0].equals(id)) { // Comparar por ID.
            datos.remove(i); // Eliminar el registro.
            encontrado = true;
            break;
        }
    }

    // Mostrar un mensaje seg√∫n si se encontr√≥ o no.
    if (encontrado) {
        JOptionPane.showMessageDialog(this, "Registro eliminado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "No se encontr√≥ un registro con el ID especificado.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    DefaultTableModel model = (DefaultTableModel) TbClasePersonalizada.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
    if (model.getValueAt(i, 0).equals(id)) { // Si el ID coincide
        model.removeRow(i);  // Eliminar la fila de la tabla
        break;
    }
}
    // Limpiar el campo ID despu√©s de eliminar.
    txtID.setText("");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
   // Verificar si hay registros en la lista.
    if (datos.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No hay registros para mostrar.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // Mostrar los registros en la consola.
    System.out.println("=== Registros Actualizados ===");
    for (String[] registro : datos) {
        System.out.println("ID: " + registro[0] + 
                           ", Entrenador: " + registro[1] + 
                           ", Horario: " + registro[2] + 
                           ", Tipo: " + registro[3]);
    }
    System.out.println("==============================");
    
    // Mostrar un mensaje al usuario.
    JOptionPane.showMessageDialog(this, "Los datos se han mostrado en la consola.", "√âxito", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
   try (Connection connection = DataBase.getConnection()) {
    String query = "INSERT INTO clase_personalizada (tipo_clase, horario, id_entrenador, capacidad_maxima) VALUES (?, ?, ?, ?)";
    
    // Preparar la sentencia SQL
    try (PreparedStatement statement = connection.prepareStatement(query)) {
        // Iterar sobre los datos a insertar
        for (String[] record : datos) {
            // Asumimos que record[0] es tipoClase, record[1] es horario, record[2] es idEntrenador y record[3] es capacidadMaxima
            statement.setString(1, record[0]);  // tipo_clase
            statement.setString(2, record[1]);  // horario
            statement.setInt(3, Integer.parseInt(record[2]));  // id_entrenador (suponiendo que record[2] es un ID v√°lido)
            statement.setInt(4, Integer.parseInt(record[3]));  // capacidad_maxima

            // Ejecutar la inserci√≥n
            statement.executeUpdate();
        }

        JOptionPane.showMessageDialog(this, "Datos guardados exitosamente.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage());
    }
} catch (SQLException | ClassNotFoundException e) {
    JOptionPane.showMessageDialog(this, "Error al conectar a la base de datos: " + e.getMessage());
}
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbClasePersonalizada;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel btnEntrenador;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel btnHorario;
    private javax.swing.JLabel btnID;
    private javax.swing.JLabel btnTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblCustomers;
    private javax.swing.JComboBox<String> txtEntrenador;
    private javax.swing.JComboBox<String> txtHorario;
    private javax.swing.JTextField txtID;
    private javax.swing.JComboBox<String> txtTipo;
    // End of variables declaration//GEN-END:variables
}
