/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author andre
 */
public class FrmClasePersonalizada extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmClasePersonalizada
     */
    public FrmClasePersonalizada() {
        initComponents();
    }
    
    private ArrayList<String[]> datos = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnID = new javax.swing.JLabel();
        btnTipo = new javax.swing.JLabel();
        btnHorario = new javax.swing.JLabel();
        btnEntrenador = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtTipo = new javax.swing.JComboBox<>();
        txtHorario = new javax.swing.JComboBox<>();
        txtEntrenador = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ClasePerzonalizada");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        btnID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnID.setText("ID");
        btnID.setBorder(new javax.swing.border.MatteBorder(null));

        btnTipo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTipo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTipo.setText("TipoClase");
        btnTipo.setBorder(new javax.swing.border.MatteBorder(null));

        btnHorario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHorario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnHorario.setText("Horario");
        btnHorario.setBorder(new javax.swing.border.MatteBorder(null));

        btnEntrenador.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEntrenador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEntrenador.setText("Entrenador");
        btnEntrenador.setBorder(new javax.swing.border.MatteBorder(null));

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtHorario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ma√±ana", "Tarde", "Noche", " " }));

        txtEntrenador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTipo, 0, 83, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        btnAgregar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar ");
        btnGuardar.setToolTipText("");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(btnAgregar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnActualizar)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar)
                    .addComponent(btnGuardar))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
         String id = txtID.getText().trim();
    String entrenador = (String) txtEntrenador.getSelectedItem();
    String horario = (String) txtHorario.getSelectedItem();
    String tipo = (String) txtTipo.getSelectedItem();

    // Validar que todos los campos tengan datos.
    if (id.isEmpty() || entrenador == null || horario == null || tipo == null) {
        JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Crear el registro.
    String[] registro = {id, entrenador, horario, tipo};

    // Mostrar un mensaje de √©xito.
    JOptionPane.showMessageDialog(this, "Registro agregado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);

    // Limpiar los campos despu√©s de agregar.
    txtID.setText("");
    txtEntrenador.setSelectedIndex(0);
    txtHorario.setSelectedIndex(0);
    txtTipo.setSelectedIndex(0);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
       String id = txtID.getText().trim();
    String nuevoEntrenador = (String) txtEntrenador.getSelectedItem();
    String nuevoHorario = (String) txtHorario.getSelectedItem();
    String nuevoTipo = (String) txtTipo.getSelectedItem();

    // Validar que todos los campos tengan datos.
    if (id.isEmpty() || nuevoEntrenador == null || nuevoHorario == null || nuevoTipo == null) {
        JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Buscar el registro en la lista.
    boolean encontrado = false;
    for (String[] registro : datos) {
        if (registro[0].equals(id)) { // Comparar por ID.
            // Actualizar los valores del registro.
            registro[1] = nuevoEntrenador;
            registro[2] = nuevoHorario;
            registro[3] = nuevoTipo;

            encontrado = true;
            break;
        }
    }

    // Mostrar un mensaje seg√∫n si se encontr√≥ o no.
    if (encontrado) {
        JOptionPane.showMessageDialog(this, "Registro actualizado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "No se encontr√≥ un registro con el ID especificado.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Limpiar los campos despu√©s de editar.
    txtID.setText("");
    txtEntrenador.setSelectedIndex(0);
    txtHorario.setSelectedIndex(0);
    txtTipo.setSelectedIndex(0);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
   // Obtener el ID ingresado.
    String id = txtID.getText().trim();

    // Validar que se haya ingresado un ID.
    if (id.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingresa un ID para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Buscar y eliminar el registro en la lista.
    boolean encontrado = false;
    for (int i = 0; i < datos.size(); i++) {
        if (datos.get(i)[0].equals(id)) { // Comparar por ID.
            datos.remove(i); // Eliminar el registro.
            encontrado = true;
            break;
        }
    }

    // Mostrar un mensaje seg√∫n si se encontr√≥ o no.
    if (encontrado) {
        JOptionPane.showMessageDialog(this, "Registro eliminado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "No se encontr√≥ un registro con el ID especificado.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Limpiar el campo ID despu√©s de eliminar.
    txtID.setText("");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
   // Verificar si hay registros en la lista.
    if (datos.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No hay registros para mostrar.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // Mostrar los registros en la consola.
    System.out.println("=== Registros Actualizados ===");
    for (String[] registro : datos) {
        System.out.println("ID: " + registro[0] + 
                           ", Entrenador: " + registro[1] + 
                           ", Horario: " + registro[2] + 
                           ", Tipo: " + registro[3]);
    }
    System.out.println("==============================");
    
    // Mostrar un mensaje al usuario.
    JOptionPane.showMessageDialog(this, "Los datos se han mostrado en la consola.", "√âxito", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    // Definir el archivo donde se guardar√°n los datos.
    File archivo = new File("datos.txt");
    
    try (BufferedWriter escritor = new BufferedWriter(new FileWriter(archivo))) {
        // Verificar si hay datos para guardar.
        if (datos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay datos para guardar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Escribir los datos en el archivo.
        for (String[] registro : datos) {
            escritor.write("ID: " + registro[0] + 
                           ", Entrenador: " + registro[1] + 
                           ", Horario: " + registro[2] + 
                           ", Tipo: " + registro[3]);
            escritor.newLine(); // Salto de l√≠nea para cada registro.
        }
        
        // Mostrar mensaje de √©xito.
        JOptionPane.showMessageDialog(this, "Datos guardados correctamente en 'datos.txt'.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
    } catch (IOException e) {
        // Manejar posibles errores de escritura.
        JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel btnEntrenador;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel btnHorario;
    private javax.swing.JLabel btnID;
    private javax.swing.JLabel btnTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> txtEntrenador;
    private javax.swing.JComboBox<String> txtHorario;
    private javax.swing.JTextField txtID;
    private javax.swing.JComboBox<String> txtTipo;
    // End of variables declaration//GEN-END:variables
}
